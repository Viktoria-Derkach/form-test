{"ast":null,"code":"var _jsxFileName = \"/home/derkach/react/test/test-form/src/components/SelectPayment/SelectPayment.tsx\";\nimport React, { forwardRef } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport Select, { components } from \"react-select\";\nimport { ReactComponent as ArrowIcon } from \"@svgr/webpack?-svgo,+ref!./arrow.svg\";\nimport { SelectEnum } from \"./SelectPayment.props\";\nimport * as styles from \"./SelectPayment.style\";\nexport const SelectPayment = forwardRef((_ref, ref) => {\n  let {\n    control\n  } = _ref;\n  const options = [{\n    value: SelectEnum.Cash,\n    label: \"Cash\"\n  }, {\n    value: SelectEnum.Checks,\n    label: \"Checks\"\n  }, {\n    value: SelectEnum.CreditCards,\n    label: \"Credit cards\"\n  }];\n\n  const DropdownIndicator = props => {\n    return /*#__PURE__*/React.createElement(components.DropdownIndicator, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ArrowIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    render: _ref2 => {\n      let {\n        field: {\n          onChange,\n          value,\n          name,\n          ref\n        }\n      } = _ref2;\n      const currentSelection = options.find(c => c.value === value);\n\n      const handleSelectChange = selectedOption => {\n        onChange(selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.value);\n      };\n\n      return /*#__PURE__*/React.createElement(Select, {\n        inputRef: ref,\n        value: currentSelection,\n        name: name,\n        components: {\n          DropdownIndicator\n        },\n        options: options,\n        onChange: handleSelectChange,\n        styles: {\n          indicatorSeparator: () => ({\n            display: \"none\"\n          }),\n          placeholder: base => ({ ...base,\n            ...styles.placeholder\n          }),\n          container: base => ({ ...base,\n            ...styles.select\n          }),\n          control: base => ({ ...base,\n            ...styles.control\n          }),\n          option: (base, _ref3) => {\n            let {\n              isDisabled,\n              isFocused,\n              isSelected\n            } = _ref3;\n            return { ...base,\n              ...styles.options,\n              backgroundColor: isDisabled ? undefined : isSelected ? \"var(--primary)\" : undefined,\n              color: isDisabled ? \"#ccc\" : isSelected ? \"var(--white)\" : \"var(--black)\",\n              cursor: isDisabled ? \"not-allowed\" : \"default\"\n            };\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      });\n    },\n    name: \"paymentMethod\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["/home/derkach/react/test/test-form/src/components/SelectPayment/SelectPayment.tsx"],"names":["React","forwardRef","Controller","Select","components","SelectEnum","styles","SelectPayment","ref","control","options","value","Cash","label","Checks","CreditCards","DropdownIndicator","props","field","onChange","name","currentSelection","find","c","handleSelectChange","selectedOption","indicatorSeparator","display","placeholder","base","container","select","option","isDisabled","isFocused","isSelected","backgroundColor","undefined","color","cursor","required"],"mappings":"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","sourcesContent":["import React, { ForwardedRef, forwardRef } from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Select, { components } from \"react-select\";\r\nimport { ReactComponent as ArrowIcon } from \"./arrow.svg\";\r\nimport { SelectEnum, SelectProps } from \"./SelectPayment.props\";\r\nimport * as styles from \"./SelectPayment.style\";\r\n\r\ninterface IOption {\r\n  value: SelectEnum;\r\n  label: string;\r\n}\r\n\r\nexport const SelectPayment = forwardRef(\r\n  (\r\n    { control }: SelectProps,\r\n    ref: ForwardedRef<HTMLInputElement>\r\n  ): JSX.Element => {\r\n    const options: IOption[] = [\r\n      { value: SelectEnum.Cash, label: \"Cash\" },\r\n      { value: SelectEnum.Checks, label: \"Checks\" },\r\n      { value: SelectEnum.CreditCards, label: \"Credit cards\" },\r\n    ];\r\n\r\n    const DropdownIndicator = (props: any) => {\r\n      return (\r\n        <components.DropdownIndicator {...props}>\r\n          <ArrowIcon />\r\n        </components.DropdownIndicator>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Controller\r\n          control={control}\r\n          render={({ field: { onChange, value, name, ref } }) => {\r\n            const currentSelection = options.find((c) => c.value === value);\r\n\r\n            const handleSelectChange = (selectedOption: IOption | null) => {\r\n              onChange(selectedOption?.value);\r\n            };\r\n\r\n            return (\r\n              <Select\r\n                inputRef={ref}\r\n                value={currentSelection}\r\n                name={name}\r\n                components={{ DropdownIndicator }}\r\n                options={options}\r\n                onChange={handleSelectChange}\r\n                styles={{\r\n                  indicatorSeparator: () => ({\r\n                    display: \"none\",\r\n                  }),\r\n                  placeholder: (base) => ({\r\n                    ...base,\r\n                    ...styles.placeholder,\r\n                  }),\r\n                  container: (base) => ({\r\n                    ...base,\r\n                    ...styles.select,\r\n                  }),\r\n                  control: (base) => ({\r\n                    ...base,\r\n                    ...styles.control,\r\n                  }),\r\n\r\n                  option: (base, { isDisabled, isFocused, isSelected }) => {\r\n                    return {\r\n                      ...base,\r\n                      ...styles.options,\r\n                      backgroundColor: isDisabled\r\n                        ? undefined\r\n                        : isSelected\r\n                        ? \"var(--primary)\"\r\n                        : undefined,\r\n                      color: isDisabled\r\n                        ? \"#ccc\"\r\n                        : isSelected\r\n                        ? \"var(--white)\"\r\n                        : \"var(--black)\",\r\n\r\n                      cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n                    };\r\n                  },\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n          name=\"paymentMethod\"\r\n          rules={{\r\n            required: true,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}