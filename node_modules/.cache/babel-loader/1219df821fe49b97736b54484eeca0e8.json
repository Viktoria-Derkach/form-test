{"ast":null,"code":"var _jsxFileName = \"/home/derkach/react/test/test-form/src/components/Form/Form.tsx\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { Button } from \"../Button/Button\";\nimport { Devider } from \"../Devider/Devider\";\nimport { Input } from \"../Input/Input\";\nimport { Label } from \"../Label/Label\";\nimport { SelectPayment } from \"../SelectPayment/SelectPayment\";\nimport { Textarea } from \"../Textarea/Textarea\";\nimport { ReactComponent as CloseIcon } from \"@svgr/webpack?-svgo,+ref!./close.svg\";\nimport styles from \"./Form.module.css\";\nconst einReg = /^[1-9]\\d?-\\d{7}$|^\\s*$/;\nconst FormSchema = yup.object().shape({\n  name: yup.string().min(2, \"Must be bigger than one letter\").max(20, \"Must be shorter\").required(\"Enter a name\"),\n  EIN: yup.string().matches(einReg, \"EIN is not valid\"),\n  notes: yup.string().max(200, \"Must be shorter\")\n});\nexport const Form = _ref => {\n  let {\n    isOpened,\n    setIsOpened,\n    className,\n    defaultValues,\n    ...props\n  } = _ref;\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    clearErrors\n  } = useForm({\n    defaultValues,\n    resolver: yupResolver(FormSchema)\n  });\n\n  const onSubmit = async formData => {\n    try {\n      console.log(formData);\n      setIsOpened(false);\n      reset();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: styles.formWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: styles.form\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Create new customer\", /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": \"Close the form\",\n    className: styles.close,\n    onClick: () => setIsOpened(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Customer name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.asterisk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"name\"), {\n    placeholder: \"Enter cusomer name\",\n    error: errors.name,\n    \"aria-invalid\": errors.name ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Customers EIN\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, register(\"EIN\"), {\n    placeholder: \"Enter cusomer EIN\",\n    error: errors.EIN,\n    \"aria-invalid\": errors.EIN ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Textarea, Object.assign({}, register(\"notes\"), {\n    placeholder: \"Notes visible only to you and your team\",\n    error: errors.notes,\n    \"aria-label\": \"Notes\",\n    \"aria-invalid\": errors.notes ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Label, {\n    size: \"m\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Payment and billing:\"), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Primary payment method\"), /*#__PURE__*/React.createElement(SelectPayment, Object.assign({}, register(\"paymentMethod\"), {\n    \"aria-label\": \"Payment Method\",\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Devider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    appearance: \"white\",\n    onClick: () => setIsOpened(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    appearance: \"primary\",\n    onClick: () => clearErrors(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};","map":{"version":3,"sources":["/home/derkach/react/test/test-form/src/components/Form/Form.tsx"],"names":["yupResolver","React","useForm","yup","Button","Devider","Input","Label","SelectPayment","Textarea","styles","einReg","FormSchema","object","shape","name","string","min","max","required","EIN","matches","notes","Form","isOpened","setIsOpened","className","defaultValues","props","register","control","handleSubmit","formState","errors","reset","clearErrors","resolver","onSubmit","formData","console","log","e","error","formWrapper","form","formTitle","close","formContent","asterisk","submit"],"mappings":"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","sourcesContent":["import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { Devider } from \"../Devider/Devider\";\r\nimport { Input } from \"../Input/Input\";\r\nimport { Label } from \"../Label/Label\";\r\nimport { SelectPayment } from \"../SelectPayment/SelectPayment\";\r\nimport { Textarea } from \"../Textarea/Textarea\";\r\nimport { ReactComponent as CloseIcon } from \"./close.svg\";\r\nimport { IReviewForm } from \"./Form.interface\";\r\nimport styles from \"./Form.module.css\";\r\nimport { FormProps } from \"./Form.props\";\r\n\r\nconst einReg = /^[1-9]\\d?-\\d{7}$|^\\s*$/;\r\n\r\nconst FormSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .min(2, \"Must be bigger than one letter\")\r\n    .max(20, \"Must be shorter\")\r\n    .required(\"Enter a name\"),\r\n  EIN: yup.string().matches(einReg, \"EIN is not valid\"),\r\n  notes: yup.string().max(200, \"Must be shorter\"),\r\n});\r\n\r\nexport const Form = ({\r\n  isOpened,\r\n  setIsOpened,\r\n  className,\r\n  defaultValues,\r\n  ...props\r\n}: FormProps): JSX.Element => {\r\n  const {\r\n    register,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    clearErrors,\r\n  } = useForm<IReviewForm>({\r\n    defaultValues,\r\n    resolver: yupResolver(FormSchema),\r\n  });\r\n\r\n  const onSubmit = async (formData: IReviewForm) => {\r\n    try {\r\n      console.log(formData);\r\n      setIsOpened(false);\r\n      reset();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={styles.formWrapper}>\r\n      <div className={styles.form} {...props}>\r\n        <div className={styles.formTitle}>\r\n          Create new customer\r\n          <button\r\n            aria-label=\"Close the form\"\r\n            className={styles.close}\r\n            onClick={() => setIsOpened(false)}\r\n          >\r\n            <CloseIcon />\r\n          </button>\r\n        </div>\r\n        <div className={styles.formContent}>\r\n          <Label>\r\n            Customer name<span className={styles.asterisk}>*</span>\r\n          </Label>\r\n          <Input\r\n            {...register(\"name\")}\r\n            placeholder=\"Enter cusomer name\"\r\n            error={errors.name}\r\n            aria-invalid={errors.name ? true : false}\r\n          />\r\n          <Label>Customers EIN</Label>\r\n          <Input\r\n            {...register(\"EIN\")}\r\n            placeholder=\"Enter cusomer EIN\"\r\n            error={errors.EIN}\r\n            aria-invalid={errors.EIN ? true : false}\r\n          />\r\n          <Label>Notes</Label>\r\n          <Textarea\r\n            {...register(\"notes\")}\r\n            placeholder=\"Notes visible only to you and your team\"\r\n            error={errors.notes}\r\n            aria-label=\"Notes\"\r\n            aria-invalid={errors.notes ? true : false}\r\n          />\r\n          <Label size=\"m\">Payment and billing:</Label>\r\n          <Label>Primary payment method</Label>\r\n          <SelectPayment\r\n            {...register(\"paymentMethod\")}\r\n            aria-label=\"Payment Method\"\r\n            control={control}\r\n          />\r\n        </div>\r\n\r\n        <Devider />\r\n        <div className={styles.submit}>\r\n          <Button appearance=\"white\" onClick={() => setIsOpened(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            appearance=\"primary\"\r\n            onClick={() => clearErrors()}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}